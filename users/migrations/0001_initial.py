# Generated by Django 3.1.7 on 2021-04-02 02:10

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DataSchoolPay',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=40, primary_key=True, serialize=False, unique=True)),
                ('student_id', models.CharField(max_length=256)),
                ('timestamp', models.CharField(max_length=256)),
                ('author', models.CharField(max_length=256, null=True)),
                ('description', models.CharField(max_length=256)),
                ('amount', models.CharField(max_length=256)),
                ('paid', models.CharField(max_length=256)),
                ('payer_name', models.CharField(max_length=256)),
                ('payer_email', models.CharField(max_length=256)),
            ],
            options={
                'verbose_name': 'SchoolPay Data',
                'verbose_name_plural': 'SchoolPay Data',
            },
        ),
        migrations.CreateModel(
            name='DataStaging',
            fields=[
                ('student_id', models.CharField(max_length=15, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('device_bpi', models.CharField(max_length=10, null=True)),
                ('device_bin', models.CharField(max_length=10, null=True)),
            ],
            options={
                'verbose_name': 'Staging Data',
                'verbose_name_plural': 'Staging Data',
                'ordering': ['student_id'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='inventory.person')),
                ('grade', models.CharField(blank=True, max_length=3, null=True)),
                ('remote', models.BooleanField(default=0)),
                ('password', models.CharField(blank=True, max_length=25, null=True)),
            ],
            bases=('inventory.person',),
        ),
        migrations.CreateModel(
            name='StudentRole',
            fields=[
                ('id', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'verbose_name': 'Student Role',
                'verbose_name_plural': 'Student Roles',
            },
        ),
        migrations.CreateModel(
            name='StudentTransfers',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=40, primary_key=True, serialize=False, unique=True)),
                ('iiq_id', models.CharField(blank=True, max_length=40, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('student', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_transfer', to='users.student')),
                ('transfer_from', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transfer_from', to='inventory.location')),
                ('transfer_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transfer_to', to='inventory.location')),
            ],
            options={
                'verbose_name': 'Student Transfer',
                'verbose_name_plural': 'Student Transfers',
            },
        ),
        migrations.CreateModel(
            name='StudentPrograms',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=40, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('program', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='program_id', to='inventory.personprograms')),
                ('student', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_program', to='users.student')),
            ],
            options={
                'verbose_name': 'Student Program',
                'verbose_name_plural': 'Student Programs',
            },
        ),
        migrations.CreateModel(
            name='StudentFinesExport',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=40, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(blank=True, choices=[('P', 'Paid'), ('UP', 'Unpaid')], default='UP', max_length=2, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, default='0.00', max_digits=6, null=True)),
                ('paid', models.DecimalField(blank=True, decimal_places=2, default='0.00', max_digits=6, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='export_fine_author', to=settings.AUTH_USER_MODEL)),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='export_fine_device', to='inventory.device')),
                ('fine_subtype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='export_fine_subtype', to='inventory.finesubtypes')),
                ('fine_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='export_fine_type', to='inventory.finetypes')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='export_fine_location', to='inventory.location')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='export_student_fine', to='users.student')),
            ],
            options={
                'verbose_name': 'Student Fine Export',
                'verbose_name_plural': 'Student Fine Exports',
            },
        ),
        migrations.CreateModel(
            name='StudentFines',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(blank=True, choices=[('P', 'Paid'), ('UP', 'Unpaid')], default='UP', max_length=2, null=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, default='0.00', max_digits=6, null=True)),
                ('paid', models.DecimalField(blank=True, decimal_places=2, default='0.00', max_digits=6, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='devices', to='inventory.device')),
                ('fine_subtype', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fine_subtype', to='inventory.finesubtypes')),
                ('fine_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fine_type', to='inventory.finetypes')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='locations', to='inventory.location')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='student_fine', to='users.student')),
            ],
            options={
                'verbose_name': 'Student Fine',
                'verbose_name_plural': 'Student Fines',
            },
        ),
        migrations.AddField(
            model_name='student',
            name='role',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.studentrole'),
        ),
        migrations.CreateModel(
            name='L5QDistribution',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=40, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('completed', models.BooleanField(default=0)),
                ('tech_required', models.BooleanField(default=0)),
                ('tech_completed', models.BooleanField(default=0)),
                ('issue_type', models.CharField(blank=True, choices=[('R', 'Registration'), ('ND', 'New Device'), ('NI', 'No Issue'), ('NS', 'New Student'), ('O', 'Other')], max_length=2, null=True)),
                ('vehicle_description', models.CharField(blank=True, max_length=75, null=True)),
                ('iiq_ticket', models.CharField(blank=True, max_length=40, null=True)),
                ('iiq_ticket_number', models.CharField(blank=True, max_length=10, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.student')),
            ],
            options={
                'verbose_name': 'L5 Queue Data',
                'verbose_name_plural': 'L5 Queue Data',
            },
        ),
        migrations.CreateModel(
            name='HistoricalStudentTransfers',
            fields=[
                ('id', models.CharField(db_index=True, default=uuid.uuid4, editable=False, max_length=40)),
                ('iiq_id', models.CharField(blank=True, max_length=40, null=True)),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('history_change_reason', models.TextField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='users.student')),
                ('transfer_from', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.location')),
                ('transfer_to', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.location')),
            ],
            options={
                'verbose_name': 'historical Student Transfer',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalStudentPrograms',
            fields=[
                ('id', models.CharField(db_index=True, default=uuid.uuid4, editable=False, max_length=40)),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('history_change_reason', models.TextField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('program', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.personprograms')),
                ('student', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='users.student')),
            ],
            options={
                'verbose_name': 'historical Student Program',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalStudentFines',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, editable=False)),
                ('status', models.CharField(blank=True, choices=[('P', 'Paid'), ('UP', 'Unpaid')], default='UP', max_length=2, null=True)),
                ('updated', models.DateTimeField(blank=True, editable=False)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, default='0.00', max_digits=6, null=True)),
                ('paid', models.DecimalField(blank=True, decimal_places=2, default='0.00', max_digits=6, null=True)),
                ('note', models.TextField(blank=True, null=True)),
                ('history_change_reason', models.TextField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('device', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.device')),
                ('fine_subtype', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.finesubtypes')),
                ('fine_type', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.finetypes')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.location')),
                ('student', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='users.student')),
            ],
            options={
                'verbose_name': 'historical Student Fine',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalStudent',
            fields=[
                ('person_ptr', models.ForeignKey(auto_created=True, blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, parent_link=True, related_name='+', to='inventory.person')),
                ('id', models.CharField(db_index=True, max_length=15, verbose_name='ID')),
                ('iiq_id', models.UUIDField(blank=True, null=True)),
                ('name', models.CharField(max_length=50)),
                ('username', models.CharField(db_index=True, max_length=30)),
                ('type', models.CharField(choices=[('F', 'Staff'), ('S', 'Student'), ('N', 'None')], default='N', max_length=1)),
                ('iiq_updated', models.DateTimeField(default=datetime.datetime(1800, 1, 1, 0, 0), verbose_name='IIQ Updated')),
                ('mosyle_updated', models.DateTimeField(default=datetime.datetime(1800, 1, 1, 0, 0), verbose_name='Mosyle Updated')),
                ('sadis_updated', models.DateTimeField(blank=True, editable=False, verbose_name='SADIS Updated')),
                ('status', models.BooleanField(default=0)),
                ('grade', models.CharField(blank=True, max_length=3, null=True)),
                ('remote', models.BooleanField(default=0)),
                ('password', models.CharField(blank=True, max_length=25, null=True)),
                ('history_change_reason', models.TextField(null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('foreign_status', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.personstatuses')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.location')),
                ('role', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='users.studentrole')),
            ],
            options={
                'verbose_name': 'historical student',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalL5QDistribution',
            fields=[
                ('id', models.CharField(db_index=True, default=uuid.uuid4, editable=False, max_length=40)),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('updated', models.DateTimeField(blank=True, editable=False, null=True)),
                ('history_change_reason', models.TextField(null=True)),
                ('completed', models.BooleanField(default=0)),
                ('tech_required', models.BooleanField(default=0)),
                ('tech_completed', models.BooleanField(default=0)),
                ('issue_type', models.CharField(blank=True, choices=[('R', 'Registration'), ('ND', 'New Device'), ('NI', 'No Issue'), ('NS', 'New Student'), ('O', 'Other')], max_length=2, null=True)),
                ('vehicle_description', models.CharField(blank=True, max_length=75, null=True)),
                ('iiq_ticket', models.CharField(blank=True, max_length=40, null=True)),
                ('iiq_ticket_number', models.CharField(blank=True, max_length=10, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='users.student')),
            ],
            options={
                'verbose_name': 'historical L5 Queue Data',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDataStaging',
            fields=[
                ('student_id', models.CharField(db_index=True, max_length=15, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('history_change_reason', models.TextField(null=True)),
                ('updated', models.DateTimeField(blank=True, editable=False, null=True)),
                ('device_bpi', models.CharField(max_length=10, null=True)),
                ('device_bin', models.CharField(max_length=10, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical Staging Data',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDataDistribution',
            fields=[
                ('student_id', models.CharField(db_index=True, max_length=15, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('history_change_reason', models.TextField(null=True)),
                ('updated', models.DateTimeField(blank=True, editable=False, null=True)),
                ('student_first_name', models.CharField(max_length=25, null=True)),
                ('student_grade', models.CharField(max_length=2, null=True)),
                ('student_last_name', models.CharField(max_length=25, null=True)),
                ('parent_address', models.CharField(max_length=150, null=True)),
                ('parent_agreement', models.BooleanField()),
                ('parent_email', models.EmailField(max_length=254, null=True)),
                ('parent_name', models.CharField(max_length=50, null=True)),
                ('parent_phone', models.CharField(max_length=15, null=True)),
                ('parent_signature', models.CharField(max_length=75, null=True)),
                ('payment_amount', models.DecimalField(decimal_places=2, max_digits=6, null=True)),
                ('payment_complete', models.BooleanField(default=0)),
                ('promotion_code', models.CharField(blank=True, max_length=25, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('student_location', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.location')),
            ],
            options={
                'verbose_name': 'historical Distribution Data',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalDataCollection',
            fields=[
                ('id', models.CharField(db_index=True, default=uuid.uuid4, max_length=36)),
                ('created', models.DateTimeField(blank=True, editable=False, null=True)),
                ('history_change_reason', models.TextField(null=True)),
                ('updated', models.DateTimeField(blank=True, editable=False, null=True)),
                ('student_next_grade', models.CharField(max_length=2, null=True)),
                ('parent_address', models.CharField(max_length=150, null=True)),
                ('parent_email', models.EmailField(max_length=254, null=True)),
                ('parent_name', models.CharField(max_length=50, null=True)),
                ('parent_phone', models.CharField(max_length=15, null=True)),
                ('device_return_type', models.CharField(choices=[('DRSR', 'Device Returned (Summer Refresh)'), ('DRNR', 'Device Returned (Not Returning)')], default='DRSR', max_length=4)),
                ('device_damage_present', models.BooleanField(default=0)),
                ('device_damage_dd', models.BooleanField(default=0)),
                ('device_damage_edd', models.BooleanField(default=0)),
                ('device_damage_lis', models.BooleanField(default=0)),
                ('device_damage_cs', models.BooleanField(default=0)),
                ('device_damage_tnc', models.BooleanField(default=0)),
                ('device_damage_tc', models.BooleanField(default=0)),
                ('device_damage_ms', models.BooleanField(default=0)),
                ('device_damage_ld', models.BooleanField(default=0)),
                ('device_damage_mkr', models.BooleanField(default=0)),
                ('device_damage_mku', models.BooleanField(default=0)),
                ('device_damage_bci', models.BooleanField(default=0)),
                ('device_damage_ccd', models.BooleanField(default=0)),
                ('charger_return_type', models.CharField(choices=[('CR', 'Charger Returned'), ('CNR', 'Charger Not Returned'), ('CNRSR', 'Charger Not Returned (Summer Refresh)')], default='CR', max_length=5)),
                ('charger_damage_present', models.BooleanField(default=0)),
                ('charger_dh', models.BooleanField(default=0)),
                ('charger_ex', models.BooleanField(default=0)),
                ('charger_co', models.BooleanField(default=0)),
                ('charger_br', models.BooleanField(default=0)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('author', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('device', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.device')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('student', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.person')),
                ('student_next_location', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='inventory.location')),
            ],
            options={
                'verbose_name': 'historical Device Collection',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='DataDistribution',
            fields=[
                ('student_id', models.CharField(max_length=15, primary_key=True, serialize=False, unique=True, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('student_first_name', models.CharField(max_length=25, null=True)),
                ('student_grade', models.CharField(max_length=2, null=True)),
                ('student_last_name', models.CharField(max_length=25, null=True)),
                ('parent_address', models.CharField(max_length=150, null=True)),
                ('parent_agreement', models.BooleanField()),
                ('parent_email', models.EmailField(max_length=254, null=True)),
                ('parent_name', models.CharField(max_length=50, null=True)),
                ('parent_phone', models.CharField(max_length=15, null=True)),
                ('parent_signature', models.CharField(max_length=75, null=True)),
                ('payment_amount', models.DecimalField(decimal_places=2, max_digits=6, null=True)),
                ('payment_complete', models.BooleanField(default=0)),
                ('promotion_code', models.CharField(blank=True, max_length=25, null=True)),
                ('student_location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.location')),
            ],
            options={
                'verbose_name': 'Distribution Data',
                'verbose_name_plural': 'Distribution Data',
                'ordering': ['student_id', 'student_first_name', 'student_last_name'],
            },
        ),
        migrations.CreateModel(
            name='DataCollection',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, max_length=36, primary_key=True, serialize=False, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated', models.DateTimeField(auto_now=True, null=True)),
                ('student_next_grade', models.CharField(max_length=2, null=True)),
                ('parent_address', models.CharField(max_length=150, null=True)),
                ('parent_email', models.EmailField(max_length=254, null=True)),
                ('parent_name', models.CharField(max_length=50, null=True)),
                ('parent_phone', models.CharField(max_length=15, null=True)),
                ('device_return_type', models.CharField(choices=[('DRSR', 'Device Returned (Summer Refresh)'), ('DRNR', 'Device Returned (Not Returning)')], default='DRSR', max_length=4)),
                ('device_damage_present', models.BooleanField(default=0)),
                ('device_damage_dd', models.BooleanField(default=0)),
                ('device_damage_edd', models.BooleanField(default=0)),
                ('device_damage_lis', models.BooleanField(default=0)),
                ('device_damage_cs', models.BooleanField(default=0)),
                ('device_damage_tnc', models.BooleanField(default=0)),
                ('device_damage_tc', models.BooleanField(default=0)),
                ('device_damage_ms', models.BooleanField(default=0)),
                ('device_damage_ld', models.BooleanField(default=0)),
                ('device_damage_mkr', models.BooleanField(default=0)),
                ('device_damage_mku', models.BooleanField(default=0)),
                ('device_damage_bci', models.BooleanField(default=0)),
                ('device_damage_ccd', models.BooleanField(default=0)),
                ('charger_return_type', models.CharField(choices=[('CR', 'Charger Returned'), ('CNR', 'Charger Not Returned'), ('CNRSR', 'Charger Not Returned (Summer Refresh)')], default='CR', max_length=5)),
                ('charger_damage_present', models.BooleanField(default=0)),
                ('charger_dh', models.BooleanField(default=0)),
                ('charger_ex', models.BooleanField(default=0)),
                ('charger_co', models.BooleanField(default=0)),
                ('charger_br', models.BooleanField(default=0)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('device', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.device')),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.person')),
                ('student_next_location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.location')),
            ],
            options={
                'verbose_name': 'Device Collection',
                'verbose_name_plural': 'Device Collections',
            },
        ),
    ]
